on:
  push:
    tags:
      - "v*"

name: Release

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.22.3"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: latest
  test:
    name: Test
    runs-on: "ubuntu-latest"
    needs: lint
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.22.3"
      - run: go mod tidy
      - run: go test -v -cover
  release:
    name: Release
    runs-on: "ubuntu-latest"
    needs: test
    strategy:
      matrix:
        goosarch:
          - "linux/amd64"
          - "linux/arm64"
          - "darwin/amd64"
          - "darwin/arm64"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: "1.22.3"
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Dependencies
        run: |
          go mod tidy
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
